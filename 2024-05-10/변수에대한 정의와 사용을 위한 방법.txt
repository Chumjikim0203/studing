1. 변수(Variable)란 무엇인가?

- "변수(Variable)"란 사전적 의미로 "언제든 변할 수 있는 수"를 말한다. 이는 Java에서 프로젝트를 다루는데에 있어서 사용하는 다양한 값들을 말하는 가장

기초적인 것으로 언제든 변할 수 있는 데이터의 값을 의미한다. 이때 사용되는 데이터의 값을 변수라고 지칭하는데, 이 데이터를 지정한 변수에 담아 사용하는

"하나의 데이터 값을 저장하기 위한 메모리" 라고 볼 수 있다. 이는 다음과 같은 특징을 가진다.


1) 변수는 일반적으로 하나의 값만을 가질 수 있다.

변수의 경우 데이터를 저장하여 사용하는 메모리인데, 이때 하나의 변수에는 하나의 데이터 값만이 저장되어 사용된다.

만일 데이터의 값이 하나에 변수에 여러개가 저장되려 할 경우에는 데이터의 왜곡현상이 일어날 수 있기 때문에 반드시 지정된 데이터의 타입에 맞는

하나의 변수만이 저장되므로 만일 예를들어 1의 값이 저장된 변수에 2의 값을 다시 저장하려 할 경우 기존에 존재하는 1의 값은 사라지고

새로 저장된 2의 값이 변수에 저장되게 된다. 말 그대로 덮어쓰기가 되는 것이다.


2) 변수의 이름은 특정한 법칙을 가진다.

변수의 이름을 정할때는 반드시 특정한 법칙을 가지는데 이는 다음과 같다.

- 변수의 이름 앞에는 특수문자(!@#% 등)혹은 공백, 숫자가 들어갈 수 없다. 다만 예외로 $와 _는 허용한다.

- 영어의 대소문자를 구별한다.

- Java에서 사용하는 예약어는 사용할 수 없다. (int, double 등의 의미를 이미 가지고 있는 명령어들)

- 변수명은 중복을 허용하지 않는다.


이러한 법칙등을 필수적으로 지켜야하며 이를 통해 변수의 이름을 정하여 사용할 수 있다.


3) 변수는 각각의 데이터 타입을 가진다.

변수에 데이터를 저장하여 사용하기 위해서는 변수가 어떠한 데이터 타입을 다루는 변수인지를 명시 해주어야 하는데, 

이는 특정 변수가 일치하는 데이터 타입을 저장하여 사용하기 위한 변수임을 알리는 것이다.

변수는 여러가지의 데이터 타입을 가질 수 있는데 대표적인 예시는 다음과 같다.


- 정수형 데이터 : 말 그대로 정수(소수점x)인 데이터를 다루는 데이터 타입이다. 이때 사용되는 예약어는 "byte","int","long" 등이 있다.

- 실수형 데이터 : 정수와는 반대로 실수(소수점을 포함)인 데이터를 다루는 데이터 타입이다. 사용되는 예약어는 "float","double"등이 있다.

- 문자형 데이터 : 문자형 데이터는 문자 한개를 다루는 데이터 타입이다. 일반적으로 사용되는 문자를 "아스키 코드"화 하여 숫자로 저장하는 형식을 가지며 사용되는 예약어는 "char" 이다.

- 문자열 데이터 : 문자형 데이터 타입인 "char"와는 다르게 긴 문자열을 다루는 데이터 타입이다. 이 경우 조금 특이한 점이 말 그대로 텍스트로 이루어진

문자의 경우 정수 , 실수도 말 그대로 "문자"로 취급하기 때문에 이 데이터 타입으로 다루는 내용은 문자의 형태로 받아들이며 사용되는 예약어는 "String" 이다.

- 논리형 데이터 : 논리형 데이터는 "참(true)" 혹은 "거짓(false)"를 다루는 데이터 타입이다. 이는 특정 상황을 참과 거짓으로 나누어 판별할때 주로 사용하며 사용되는 예약어는

"boolean" 이다.


2. 변수의 생성과 사용에 대하여


- 변수를 사용하기 위해선 우선적으로 변수를 생성하여 그 안에 데이터를 담기위한 메모리를 만들어주어야 한다.

이를 "변수 선언"이라고 하는데 변수 선언의 방법은 다음과 같다.


"데이터타입명 변수명;"


이런 식으로 데이터 타입을 나타내는 예약어를 먼저 적어주고 공백후 변수명을 적어준뒤 ";" 세미클론을 사용하여 선언하였음을 알려주면 된다.

이렇게 되면 특정 데이터 타입을 다루는 변수가 선언된 것이다. 만일 "int number;" 로 변수를 선언한 경우, 정수형 데이터 타입(int)을 담는 변수인 number가

생성이 된 것이다. 이때 이 안에 데이터를 담기위해서는 2가지 방법이 존재하는데 다음과 같은 방법을 사용할 수 있다.


"int number = 1;"


"int number;

number = 1;"


위의 경우 차이점이 존재하는데 바로 

"선언과 동시에 초기값을 집어넣는 초기화 과정을 한번에 하거나" 혹은 "선언만 한 뒤 대입 연산자를 통하여 후에 변수에 초기값을 집어넣는 초기화 과정"을

실행했다는 점이다. 물론 이는 결국 같은 결과값을 가지지만 이후에 서술할 전역변수 / 지역변수의 선언 과정에서 극명한 차이점을 둔다.

결국 위의 2가지 방법중 한가지를 사용하면 number라는 변수에 정수형 데이터인 1이 저장 되었으므로 변수를 호출하여 사용하게 되면 그 안에 존재하는 1이라는 값이

출력이 되는 것이다. 이런식으로 데이터를 다루기 위해서 변수는 반드시 필요하다. 프로그래밍 언어를 통해 작성되는 코드에서 데이터의 값은 무조건

변수를 통해서만 다루어 지기 때문이다.


3. 전역변수 / 지역변수란?


- 변수는 크게 2가지의 형태로 나뉘는데 이는 클래스(Class)전체에서 사용되는 "전역변수(Global Variable)"와 함수 내에서만 사용되는 "지역변수(Local Variable)"이다.

이 두가지의 변수에는 다음과 같은 차이점을 가진다.


1) 전역변수

전역변수의 경우 선언의 시점이 클래스 안 / 함수 밖에서 선언되는 변수를 의미한다. 따라서 이 변수의 유효 범위는 클래스 혹은 그 안에 존재하는

모든 함수에 대하여 가능함을 의미한다. 말 그대로 "전역(global)" 인 셈이다. 또한 지역변수와는 다르게 전역변수의 경우 클래스 내에서 언제든 호출하여 사용하기

위해 선언과 동시에 그 메모리에 대한 값을 부여받는 "스태틱(Static)" 상태로 취급을 받는다. 이는 존재하는 상태의 변수(메모리가 할당되어있는)임을 일겉는다.

이는 스태틱 처리된 변수는 하나의 복사본만을 가지고 활용됨을 말한다. 이를 "정적 변수(Static Variable)" 이라고도 한다.

또한 클래스 내에서 어디서든 호출이 되고 대입 연산자를 통해 저장되는 값 또한 어디서든 변경이 가능한데, 이 경우 변수가 가지는 성질중 하나인

"변수는 한가지의 값만 가진다." 라는 성질로 인해 값이 바뀐순간 모든 함수내에서 동일하게 적용되는 것이다.

따라서 전역변수에 대한 값의 변경이 이루어지는 시점에 따라 그 값은 전체적으로 변경된다.


2) 지역변수

지역변수는 전역변수와 다르게 클래스 안에 존재하는 함수 안에서 선언된 변수를 의미한다. 그러므로 지역변수의 유효 범위는 선언이 이루어진 함수 안에서만

사용이 가능하다. 결국 해당 지역변수는 선언이 이루어진 변수 내에서만 사용이 가능하게 되므로 다른 함수 혹은 클래스에서는 같은 변수명이라도 아예 다른 변수로

취급이 되는 것이다. 또한 지역 변수의 생명주기(LifeCycle)도 중요한데, 이는 해당 함수가 호출되는 시점에서 시작되어 함수이 내용이 끝나는 시점에 소멸되는 것이다.

또한 지역변수를 직접 사용하기 전에 반드시 초기화 과정이 이루어져야 하는데 이는 비어있는(Null) 변수의 경우 오류를 발생 시킬 수 있기 때문에

반드시 사용전에 변수에 값을 대입하여주는 초기화 과정을 거치는 것이 중요하다.